# Generated by Django 4.1.3 on 2022-11-13 16:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Biomaterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_age', models.IntegerField(verbose_name='Возраст')),
                ('d_gender', models.CharField(choices=[('m', 'мужской'), ('f', 'женский')], default='f', max_length=1, verbose_name='Пол')),
                ('d_ab0', models.IntegerField(choices=[(1, 'I(0)'), (2, 'II(A)'), (3, 'III(B)'), (4, 'IV(AB)')], null=True, verbose_name='Группа крови')),
                ('d_rh', models.IntegerField(choices=[(1, 'положительный'), (2, 'отрицательный')], null=True, verbose_name='Резус фактор')),
                ('d_anamnesis', models.IntegerField(verbose_name='Длительность заболевания (лет)')),
                ('d_pth', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='ПТГ')),
                ('d_calcium', models.DecimalField(blank=True, decimal_places=2, max_digits=3, verbose_name='Ca')),
                ('d_phosph', models.DecimalField(blank=True, decimal_places=2, max_digits=3, verbose_name='P')),
                ('expl_date', models.DateField(verbose_name='Дата забора биоматериала')),
                ('transfer_time', models.IntegerField(verbose_name='Время транспортировки (мин)')),
            ],
        ),
        migrations.CreateModel(
            name='DDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_diagnosis', models.CharField(max_length=100, verbose_name='Диагноз')),
            ],
            options={
                'verbose_name': 'Диагноз донора',
                'verbose_name_plural': 'Диагнозы доноров',
                'ordering': ['d_diagnosis'],
            },
        ),
        migrations.CreateModel(
            name='DGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_group', models.CharField(max_length=10, verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Группа донора',
                'verbose_name_plural': 'Группы доноров',
                'ordering': ['d_group'],
            },
        ),
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Препарат',
                'verbose_name_plural': 'Препараты',
                'ordering': ['drug'],
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=20, verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Клиническая группа',
                'verbose_name_plural': 'Клинические группы',
                'ordering': ['group'],
            },
        ),
        migrations.CreateModel(
            name='IndexProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_procedure', models.CharField(max_length=1, verbose_name='Номер трансплантации')),
            ],
            options={
                'verbose_name': 'Номер трансплантации',
                'verbose_name_plural': 'Номера трансплантации',
                'ordering': ['index_procedure'],
            },
        ),
        migrations.CreateModel(
            name='Intervals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(max_length=2, verbose_name='Интервал (мес.)')),
            ],
            options={
                'verbose_name': 'Временной интервал',
                'verbose_name_plural': 'Временные интервалы',
                'ordering': ['interval'],
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_proc', models.CharField(max_length=100, verbose_name='Метод трансплантации БМКП')),
            ],
            options={
                'verbose_name': 'Метод трансплантации',
                'verbose_name_plural': 'Методы трансплантации',
                'ordering': ['method_proc'],
            },
        ),
        migrations.CreateModel(
            name='Morphology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morphology', models.CharField(max_length=255, verbose_name='Заключение')),
            ],
            options={
                'verbose_name': 'Гистологическое заключение',
                'verbose_name_plural': 'Гистологические заключения',
                'ordering': ['morphology'],
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_age', models.IntegerField(verbose_name='Возраст')),
                ('p_gender', models.CharField(choices=[('m', 'мужской'), ('f', 'женский')], default='f', max_length=1, verbose_name='Пол')),
                ('p_ab0', models.IntegerField(choices=[(1, 'I(0)'), (2, 'II(A)'), (3, 'III(B)'), (4, 'IV(AB)')], null=True, verbose_name='Группа крови')),
                ('p_rh', models.IntegerField(choices=[(1, 'положительный'), (2, 'отрицательный')], null=True, verbose_name='Резус фактор')),
                ('prim_proc_date', models.DateField(verbose_name='Дата первичной операции')),
                ('anamnesis', models.IntegerField(verbose_name='Продолжительность ГПТ (лет)')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.groups', verbose_name='Клиническая группа')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Prim_diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prim_diagn', models.CharField(max_length=100, verbose_name='Диагноз')),
            ],
            options={
                'verbose_name': 'Первичный диагноз',
                'verbose_name_plural': 'Первичные диагнозы',
                'ordering': ['prim_diagn'],
            },
        ),
        migrations.CreateModel(
            name='Prim_procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prim_proc', models.CharField(max_length=100, verbose_name='Операция')),
            ],
            options={
                'verbose_name': 'Первичная операция',
                'verbose_name_plural': 'Первичные операции',
                'ordering': ['prim_proc'],
            },
        ),
        migrations.CreateModel(
            name='TypeTests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_test', models.CharField(max_length=10, verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Лабораторный тест',
                'verbose_name_plural': 'Лабораторные тесты',
                'ordering': ['type_test'],
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose', models.DecimalField(blank=True, decimal_places=3, max_digits=6, verbose_name='Суточная доза')),
                ('drug', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='database.drugs', verbose_name='Препарат')),
                ('id_patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.patients', verbose_name='id_пациента')),
                ('interval', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.intervals', verbose_name='Временной инртервал')),
            ],
            options={
                'verbose_name': 'Лечение',
                'verbose_name_plural': 'Лечение',
            },
        ),
        migrations.CreateModel(
            name='SF_36',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_index_sf36', models.CharField(choices=[('PF', 'Физич. функциониров.'), ('RF', 'Ролев. функциониров., обусл. физ. сост.'), ('BP', 'Интенсивн. боли'), ('GH', 'Общ. сост. здоровья'), ('VT', 'Жизн. активность'), ('SF', 'Социальн. функционир.'), ('RE', 'Ролев. функциониров., обусл. эмоц. сост.'), ('MH', 'Психич. здоровье'), ('ИП_PH', 'Физический компонент здоровья'), ('ИП_MH', 'Психологический компонент здоровья')], max_length=5, verbose_name='Индексы SF-36')),
                ('date_sf36', models.DateField(verbose_name='Дата анкетирования')),
                ('result_sf36', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Значение индекса')),
                ('id_patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.patients', verbose_name='id_пациента')),
                ('interval_sf36', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.intervals', verbose_name='Временной инртервал')),
            ],
            options={
                'verbose_name': 'Анкета SF-36',
                'verbose_name_plural': 'Анкеты SF-36',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_proc', models.DateField(verbose_name='Дата трансплантации')),
                ('numb_cell', models.IntegerField(verbose_name='Количество клеток')),
                ('complecations', models.CharField(max_length=255, verbose_name='Осложнения')),
                ('id_biomaterial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.biomaterias', verbose_name='id_биоматериала')),
                ('id_patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.patients', verbose_name='id_пациента')),
                ('index_proc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.indexprocedure', verbose_name='Номер трансплантации')),
                ('method_proc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.method', verbose_name='Метод трансалантации')),
            ],
            options={
                'verbose_name': 'Пересадка БМКП',
                'verbose_name_plural': 'Пересадки БМКП',
            },
        ),
        migrations.AddField(
            model_name='patients',
            name='prim_diagn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.prim_diagnosis', verbose_name='Первичный диагноз'),
        ),
        migrations.AddField(
            model_name='patients',
            name='prim_proc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.prim_procedure', verbose_name='Первичная операция'),
        ),
        migrations.CreateModel(
            name='LabTests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_test', models.DateField(verbose_name='Дата проведения исследования')),
                ('result_test', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Результат исследования')),
                ('id_patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.patients', verbose_name='id_пациента')),
                ('interval_test', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.intervals', verbose_name='Временной инртервал')),
                ('type_test', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.typetests', verbose_name='Вид лабораторного исследования')),
            ],
            options={
                'verbose_name': 'Лабораторный тест',
                'verbose_name_plural': 'Лабораторные тесты',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='biomaterias',
            name='d_diagnosis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.ddiagnosis', verbose_name='Диагноз'),
        ),
        migrations.AddField(
            model_name='biomaterias',
            name='d_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.dgroups', verbose_name='Группа донора'),
        ),
        migrations.AddField(
            model_name='biomaterias',
            name='morphology',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.morphology', verbose_name='Гистология'),
        ),
    ]
